version: '2'
services:
  proxy:
    image: jwilder/nginx-proxy
    environment:
      DEFAULT_HOST: pacman.${RIT_ENV}.rit.unimaas.nl
      # otherwise logstash will keep sending its own logs to itself over and over
      LOGSPOUT: ignore
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/ssl/certs:/etc/nginx/certs/
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - corpus_default
      - oculus_default
      - default
  elk:
    build: elk/
    hostname: elk
    environment:
      ELASTIC_PASSWORD : foobar
      # otherwise logstash will keep sending its own logs to itself over and over
      LOGSPOUT: ignore
      VIRTUAL_HOST: elk.${RIT_ENV}.rit.unimaas.nl
    ports:
      # Expose Filebeat-ELK-port that accepts logs from non-Docker services
      - "5044:5044"
      # Expose Logstash-HTTP-port that accepts logs from non-Docker services
      - "5001:5001"
    volumes:
      - /etc/localtime:/etc/localtime:ro
  logspout:
    build: logspout/
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - "elk"
    environment:
      DEBUG: "true"
      LOGSPOUT: ignore
      MULTILINE_ENABLE_DEFAULT: "true"
      MULTILINE_MATCH: "nonfirst"
      MULTILINE_PATTERN: '^(\s|{)'
      MULTILINE_FLUSH_AFTER: 500
    command: "multiline+logstash://elk:5000"
  nagios:
    build: externals/nagios-docker/
    hostname: nagios
    environment:
      NAGIOS_FQDN: nagios.${RIT_ENV}.rit.unimaas.nl
      MAILER_MICROSERVICE_HOST: mailer.${RIT_ENV}.rit.unimaas.nl
      MAILER_MICROSERVICE_USER: user
      MAILER_MICROSERVICE_PASS: password
      LOGSTASH_TAGS: NAGIOS, AUX
      VIRTUAL_HOST: nagios.${RIT_ENV}.rit.unimaas.nl
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./externals/nagios-docker/cust-plugins:/opt/Custom-Nagios-Plugins:ro
      - ./externals/nagios-docker/etc:/opt/nagios/etc:ro
      - ./externals/nagios-docker/etc/htpasswd.users:/opt/nagios/etc/htpasswd.users
      - nagiosdata:/opt/nagios/var
  rabbitmq:
    build: rabbitmq/
    hostname: rabbitmq
    environment:
      # Note that changing the default username and password through these ENV vars does not work when the named volume 'rabbitmq' already exists.
      # Username and password are stored in a credentials file somewhere inside the /var/lib/rabbitmq folder (thus within the named volume)
      # In such cases, changing the username and password can only be achieved by 1) doing it through the rabbitmq management web interface
      # or 2) by deleting the named volume, updating the ENV vars and recreating the Docker container.
      LOGSTASH_TAGS: RABBITMQ
      VIRTUAL_HOST: rabbitmq.${RIT_ENV}.rit.unimaas.nl
      VIRTUAL_PORT: 15672
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - rabbitmq:/var/lib/rabbitmq
    ports:
      - "5672:5672"
  mailer:
    build: externals/dh-mailer
    hostname: mailer
    environment:
      HTTP_AUTH_USERNAME : user
      HTTP_AUTH_PASSWORD : password
      RABBITMQ_HOST : rabbitmq
      RABBITMQ_USER : user
      RABBITMQ_PASS : password
      TRANSPORT : "stub"
      BCC : "false"
      MICROSERVICE_PORT : 80
      DEFAULT_FROM : "DataHub [mailer] <datahub@maastrichtuniversity.nl>"
      SMTP_HOST : "smtp.maastrichtuniversity.nl"
      SMTP_PORT : 25
      TEMPLATES_DIR : "/usr/src/app/templates"
      # Send 1 message every 1000 milliseconds
      CHANNEL_PREFETCH : 1
      MS_BETWEEN_PULLS : 1000
      LOG_LEVEL_CONSOLE : 'debug'
      LOG_LEVEL_FILE : 'debug'
      LOGSTASH_TAGS: MAILER
      VIRTUAL_HOST: mailer.${RIT_ENV}.rit.unimaas.nl
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./externals/dh-mailer/app:/usr/src/app/
    networks:
      - oculus_default
      - corpus_default
      - default
networks:
  corpus_default:
    external: true
  oculus_default:
    external: true
volumes:
  nagiosdata:
  rabbitmq:
