filter {

      if "IRODS_MIGRATE_COLLECTION" in [tags] {

        mutate {
            add_field => {
                "logtrail" => "irods_migration"
             }
        }

        if [message] =~ /========================================/ {drop { }}
        if [message] =~ /----------------------------------------/ {drop { }}

        grok {
          break_on_match => true
          match => { "message" => "^%{TIMESTAMP_ISO8601:log_timestamp} \| %{LOGLEVEL:level}%{SPACE}\|%{SPACE}%{JAVALOGMESSAGE:log_message}" }
        }

        grok {
          break_on_match => true
          match => { "log_message" => "^Starting irods collection migration script for collection /nlmumc/projects/%{WORD:project}/%{WORD:collection}" }
          match => { "log_message" => "^(Executing|Simulating): *%{GREEDYDATA:command}"}
          match => { "log_message" => "^Costs for project %{WORD:project} are decreased from %{GREEDYDATA:command}" }
          # to prevent grokparse failures on second parsing
          match => { "log_message" => "%{GREEDYDATA:command}" }
        }

      date {
        match => [ "log_timestamp" , "ISO8601" ]
        timezone => "Europe/Amsterdam"
        remove_field => [ "log_timestamp" ]
      }

     }
}