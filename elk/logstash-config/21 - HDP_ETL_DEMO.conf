filter {
    if "ETL_DEMO" in [tags] {

        mutate {
            add_field => { "logtrail" => "hdp-etl-demo" }
            add_tag => [ "CP21_MUT01" ]
        }

        grok {
            break_on_match => true
             # audit trail
             match => { "message" => "^\[%{TIMESTAMP_ISO8601:timestamp}\]\[%{WORD:level}\]\[%{DATA:ehr.dataset}\]\[%{DATA:ehr.input_data}\]\[%{UUID:ehr.id}\]\[%{WORD:ehr.topic}\]\[%{WORD:ehr.template}\] - %{GREEDYDATA:log_message}" }
             # error
             match => { "message" => "^\[%{TIMESTAMP_ISO8601:timestamp}\]\[%{WORD:level}\]\[%{DATA:ehr.dataset}\]\[%{DATA:ehr.input_data}\]\[%{DATA:ehr.id}\]\[%{WORD:ehr.topic}\]\[%{WORD:ehr.template}\] - %{GREEDYDATA:log_message}" }
             # info
             match => { "message" => "^\[%{TIMESTAMP_ISO8601:timestamp}\]\[%{WORD:level}\] - %{GREEDYDATA:log_message}" }
             match => { "message" => "^%{TIMESTAMP_ISO8601:timestamp}\s%{LOGLEVEL:level}\s%{GREEDYDATA:log_message}" }
             match => { "message" => "\[.*?\]%{GREEDYDATA:log_message}" }
            add_tag => [ "CP21_GRO01" ]
        }

        date {
            timezone => "Europe/Amsterdam"
            match => [ "timestamp" ,
                       "ISO8601",
                       "yyyy/MM/dd HH:mm:ss",
                       "yyyy-MM-dd HH:mm:ss"
                     ]
            remove_field => [ "timestamp" ]       # cleanup, data is available in @timestamp
            add_tag => [ "CP21_DAT01" ]
        }
    }
}


