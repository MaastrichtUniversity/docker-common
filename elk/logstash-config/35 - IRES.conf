filter {
    if "IRES" in [tags] {
        if [log_message] =~ /environment variable set/ {drop { }}
        if [log_message] =~ /Authenticated/ {drop { }}

        ## First let's do the service specific parts
        if "IRES_UM03" in [tags] {
            mutate {
                add_field => { "logtrail" => "ires_um03" }
                add_tag => [ "CP35_MUT03" ]
            }
        }
        if "IRES_AZM" in [tags] {
            mutate {
                add_field => { "logtrail" => "ires_azm" }
                add_tag => [ "CP35_MUT05" ]
            }
        }
        if "IRES_SURFSARA" in [tags] {
            mutate {
                add_field => { "logtrail" => "ires_surfsara" }
                add_tag => [ "CP35_MUT06" ]
            }
        }

        mutate {
            rename => { "log_message" => "[log][original]" }
            add_tag => [ "CP35_MUT07" ]
        }


        ## Now do the general parsing which is equal for all resource servers
        grok {
            break_on_match => true
            # msiWriteRodsLog message
            match => { "[log][original]" => "msiWriteRodsLog message:\s(%{LOGLEVEL:level}:\s)?+%{GREEDYDATA:log_message}" }
            match => { "[log][original]" => "%{LOGLEVEL:level}:\s+%{GREEDYDATA:log_message}" }
            match => { "[log][original]" => "%{DATA:level}:\s+%{GREEDYDATA:log_message}" }
            match => { "[log][original]" => "%{GREEDYDATA:log_message}" }
            add_tag => [ "CP35_GR01" ]
        }

        if [server_timestamp] {
            date {
                timezone => "Europe/Amsterdam"
                match => [ "server_timestamp", "yyyy-MM-dd'T'HH:mm:ss.SSSZ" ]
                add_tag => [ "CP34_DAT01" ]
            }
        }
    }
}
