filter {
    if "PACMAN" in [tags] {

        # for all logs, add logtrail field
        mutate {
            add_field => { "logtrail" => "pacman" }
            add_tag => [ "CP40_MUT01" ]
        }

        if [inputsource] == "logspout" {
            # logs received via logspout (plain text logfiles)
            grok {
                break_on_match => true
                match => { "message" => "%{COMBINEDAPACHELOG}" }
                match => { "message" => "^\[%{HTTPDERROR_DATE:timestamp}\] \[%{JAVAMETHOD:[event][module]}:%{LOGLEVEL:[log][level]}\] \[pid %{NUMBER:[process][pid]}\] %{GREEDYDATA:[log][message]}" }
                match => { "message" => "^%{SYSLOG5424SD:timestamp} %{NOTSPACE:class} \[pid %{NUMBER:pid}] %{WORD:errorcode}: %{JAVALOGMESSAGE:[log][message]}" }
                match => { "message" => "^%{WORD:errorcode}: %{JAVALOGMESSAGE:[log][message]}" }
                match => { "message" => "^%{NOTSPACE:datestamp} %{HAPROXYTIME:timestamp} %{HOSTPORT:class}: %{LOGLEVEL:level} %{GREEDYDATA:[log][message]}" }
                match => { "message" => "%{JAVALOGMESSAGE:[log][message]}( )*\[%{WORD:level}\]" }
                match => { "message" => "%{GREEDYDATA:[log][message]}" }
                add_tag => [ "CP40_GRO01" ]
            }
            if [datestamp] {
                mutate {
                    replace => { "timestamp" => "%{datestamp} %{timestamp}" }
                    add_tag => [ "CP40_MUT02" ]
                }
            }
            date {
                timezone => "Europe/Amsterdam"
                match => [ "timestamp" ,
                    "dd/MMM/yyyy:HH:mm:ss Z",
                    "yyyy/MM/dd HH:mm:ss,SSSSSS"
                  ]
                remove_field => [ "timestamp" ]       # cleanup, data is available in @timestamp
                add_tag => [ "CP40_DAT01" ]
            }
        } else {
           # logs received via filebeat (in json format)
            mutate {
                rename => { "client_ip" => "clientip" }  # different naming to be consistent with other docs
                rename => { "input_type" => "type" }     # different naming to be consistent with other docs
                rename => { "method" => "http_method" }  # different naming to be consistent with other docs
                rename => { "referer" => "referrer" }    # misspelled
                rename => { "request_uri" => "request" } # different naming to be consistent with other docs
                rename => { "severity" => "level" }      # different naming to be consistent with other docs
                rename => { "username" => "auth" }       # different naming to be consistent with other docs
                add_tag => [ "CP40_MUT03" ]
            }
            date {
                timezone => "Europe/Amsterdam"
                match => [ "timestamp" , "ISO8601" ]
                remove_field => [ "timestamp" ]       # cleanup, data is available in @timestamp
                add_tag => [ "CP40_DAT02" ]
            }

        }
    }
}
