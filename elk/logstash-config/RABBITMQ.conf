input {
    rabbitmq {
        host => "rabbitmq"
        exchange => "datahub.events_tx"
        queue => "datahub.events_logstash"
        user => "user"
        password => "password"
        heartbeat => 30
        durable => true
        metadata_enabled => true
        key => "#"
#        id => "rabbitmq_input_id"
        tags => [ "RABBITMQ_DIRECT" ]
    }
}

filter {
    if "RABBITMQ" in [tags] {

        mutate {
            add_field => {
                "logtrail" => "rabbitmq"
            }
        }
        grok {
            match => { "message" => "%{TIMESTAMP_ISO8601:log_timestamp} \[%{LOGLEVEL:level}\] %{GREEDYDATA:log_msg}" }
        }
        date {
            match => [ "log_timestamp" , "ISO8601" ]
        }
    }
}

filter {
    if "RABBITMQ_DIRECT" in [tags] {

        # ensure project and collection fields exist (add if not existing)
        if ![project] {
            mutate { add_field => { "project" => "n/a" } }
        }
        if ![collection] {
            mutate { add_field => { "collection" => "n/a" } }
        }

        # populate routing_key with value from metadata or set to <none>
        if [@metadata][rabbitmq_properties][routing-key] {
            mutate { add_field => { "routing_key" => "%{[@metadata][rabbitmq_properties][routing-key]}" } }
        } else {
            mutate { add_field => { "routing_key" => "<none>" } }
        }

        # populate some fields for nice logtrail display
        mutate {
            add_field => {
                "logtrail" => "rabbitmq"
                "source"=> "%{[@metadata][rabbitmq_properties][exchange]}"
                "message" => "routing-key: %{[@metadata][rabbitmq_properties][routing-key]} - collection: %{project} / %{collection}"
            }
        }

        if [@metadata][rabbitmq_properties][timestamp] {
            mutate { add_tag => [ "DATE_PROCESSING" ] }
            date {
                match => ["[@metadata][rabbitmq_properties][timestamp]", "UNIX"]
            }
        }
    }
}

